// Sélection des éléments HTML
const canvas = document.getElementById('signature-pad');
const button = document.getElementById('action-button');

// Initialisation de SignaturePad
const signaturePad = new SignaturePad(canvas, {
    backgroundColor: 'rgba(255, 255, 255, 1)', // Fond blanc opaque
    penColor: 'black' // Couleur du stylo
});

// Fonction pour ajuster la taille du canvas en fonction du DPI
function resizeCanvas() {
    const ratio = Math.max(window.devicePixelRatio || 1, 1);
    canvas.width = canvas.offsetWidth * ratio;
    canvas.height = canvas.offsetHeight * ratio;
    canvas.getContext('2d').scale(ratio, ratio);
    signaturePad.clear(); // Efface le canvas après redimensionnement
}

// Appel initial pour ajuster la taille du canvas
resizeCanvas();

// Redimensionnement du canvas lors du redimensionnement de la fenêtre
window.addEventListener('resize', resizeCanvas);

// Fonction pour mettre à jour le bouton en fonction de la présence d'une signature
function updateButton() {
    if (signaturePad.isEmpty()) {
        button.textContent = 'SIGN HERE';
        button.disabled = true;
    } else {
        button.textContent = 'SEND PACT';
        button.disabled = false;
    }
}

// Écouteurs d'événements pour détecter la fin du dessin
canvas.addEventListener('mouseup', updateButton);
canvas.addEventListener('touchend', updateButton);
canvas.addEventListener('mouseout', updateButton);

// Fonction pour ouvrir les deux liens
function openLinks() {
    const url1 = '#';
    const url2 = 'https://t.me/grumcoin';
    
    // Ouvrir le premier lien
    window.open(url1, '_blank');
    
    // Utiliser un timeout pour éviter le blocage des pop-ups
    setTimeout(() => {
        window.open(url2, '_blank');
    }, 100); // Délai de 100 ms
}

// Gestion du clic sur le bouton
button.addEventListener('click', function() {
    if (!signaturePad.isEmpty()) {
        openLinks(); // Appel de la fonction pour ouvrir les liens
    }
});

// Empêche le défilement sur les appareils tactiles lors du dessin
canvas.addEventListener('touchstart', function (e) {
    e.preventDefault();
}, { passive: false });